services:

  server:
    command: python main.py
    logging:
      options:
        max-size: "10m"
    build:
      context: server
      dockerfile: Dockerfile
    env_file:
      - ./server/.env
    environment:
      - MODE=server
    ports:
      - "9001:9001"
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9001/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  client:
    logging:
      options:
        max-size: "10m"
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    networks:
      - default
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5173/" ]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    logging:
      options:
        max-size: "10m"
    image: postgres:14-alpine
    user: postgres
    platform: linux/amd64
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5442:5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - db_home:/var/lib/postgresql/data
    networks:
      - default

volumes:
  db_home:

networks:
  default:
    driver: bridge
